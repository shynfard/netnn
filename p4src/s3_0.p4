/* -*- P4_16 -*- */

#include <core.p4>
#include <v1model.p4>


/*
 * Standard ethernet header
 */
header ethernet_t {
    bit<48> dstAddr;
    bit<48> srcAddr;
    bit<16> etherType;
}

/*
 * This is a custom protocol header for the calculator. We'll use
 * ethertype 0x1234 for is (see parser)
 */
const bit<16> P4CALC_ETYPE = 0x1234;
const bit<8>  P4CALC_P     = 0x50;   // 'P'
const bit<8>  P4CALC_4     = 0x34;   // '4'
const bit<8>  P4CALC_VER   = 0x01;   // v0.1

const bit<32> replication = 0x00;

const bit<128> weight_0_0_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_0_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_0_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_0_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_1_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_1_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_1_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_1_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_2_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_2_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_2_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_2_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_3_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_3_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_3_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_3_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_4_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_4_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_4_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_4_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_5_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_5_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_5_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_5_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_6_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_6_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_6_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_6_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_7_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_7_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_7_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_7_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_8_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_8_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_8_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_8_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_9_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_9_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_9_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_9_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_10_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_10_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_10_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_10_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_11_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_11_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_11_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_11_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_12_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_12_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_12_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_12_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_13_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_13_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_13_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_13_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_14_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_14_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_14_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_14_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_15_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_15_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_15_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_15_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_16_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_16_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_16_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_16_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_17_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_17_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_17_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_17_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_18_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_18_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_18_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_18_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_19_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_19_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_19_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_19_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_20_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_20_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_20_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_20_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_21_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_21_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_21_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_21_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_22_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_22_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_22_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_22_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_23_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_23_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_23_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_23_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_24_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_24_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_24_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_24_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_25_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_25_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_25_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_25_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_26_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_26_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_26_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_26_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_27_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_27_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_27_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_27_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_28_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_28_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_28_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_28_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_29_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_29_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_29_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_29_3 = 0x12345678123456781234567812345678;
const bit<128> weight_0_30_0 = 0x12345678123456781234567812345678;
const bit<128> weight_0_30_1 = 0x12345678123456781234567812345678;
const bit<128> weight_0_30_2 = 0x12345678123456781234567812345678;
const bit<128> weight_0_30_3 = 0x12345678123456781234567812345678;

const bit<128> weight_1_0_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_0_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_0_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_0_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_1_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_1_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_1_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_1_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_2_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_2_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_2_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_2_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_3_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_3_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_3_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_3_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_4_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_4_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_4_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_4_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_5_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_5_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_5_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_5_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_6_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_6_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_6_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_6_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_7_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_7_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_7_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_7_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_8_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_8_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_8_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_8_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_9_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_9_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_9_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_9_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_10_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_10_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_10_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_10_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_11_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_11_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_11_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_11_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_12_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_12_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_12_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_12_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_13_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_13_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_13_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_13_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_14_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_14_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_14_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_14_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_15_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_15_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_15_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_15_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_16_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_16_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_16_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_16_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_17_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_17_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_17_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_17_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_18_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_18_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_18_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_18_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_19_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_19_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_19_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_19_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_20_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_20_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_20_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_20_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_21_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_21_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_21_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_21_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_22_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_22_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_22_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_22_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_23_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_23_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_23_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_23_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_24_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_24_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_24_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_24_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_25_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_25_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_25_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_25_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_26_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_26_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_26_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_26_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_27_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_27_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_27_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_27_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_28_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_28_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_28_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_28_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_29_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_29_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_29_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_29_3 = 0x12345678123456781234567812345678;
const bit<128> weight_1_30_0 = 0x12345678123456781234567812345678;
const bit<128> weight_1_30_1 = 0x12345678123456781234567812345678;
const bit<128> weight_1_30_2 = 0x12345678123456781234567812345678;
const bit<128> weight_1_30_3 = 0x12345678123456781234567812345678;

const bit<128> weight_2_0_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_0_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_0_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_0_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_1_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_1_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_1_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_1_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_2_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_2_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_2_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_2_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_3_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_3_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_3_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_3_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_4_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_4_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_4_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_4_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_5_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_5_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_5_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_5_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_6_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_6_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_6_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_6_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_7_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_7_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_7_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_7_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_8_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_8_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_8_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_8_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_9_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_9_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_9_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_9_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_10_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_10_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_10_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_10_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_11_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_11_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_11_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_11_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_12_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_12_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_12_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_12_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_13_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_13_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_13_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_13_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_14_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_14_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_14_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_14_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_15_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_15_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_15_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_15_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_16_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_16_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_16_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_16_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_17_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_17_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_17_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_17_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_18_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_18_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_18_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_18_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_19_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_19_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_19_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_19_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_20_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_20_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_20_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_20_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_21_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_21_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_21_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_21_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_22_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_22_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_22_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_22_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_23_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_23_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_23_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_23_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_24_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_24_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_24_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_24_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_25_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_25_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_25_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_25_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_26_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_26_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_26_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_26_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_27_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_27_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_27_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_27_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_28_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_28_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_28_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_28_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_29_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_29_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_29_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_29_3 = 0x12345678123456781234567812345678;
const bit<128> weight_2_30_0 = 0x12345678123456781234567812345678;
const bit<128> weight_2_30_1 = 0x12345678123456781234567812345678;
const bit<128> weight_2_30_2 = 0x12345678123456781234567812345678;
const bit<128> weight_2_30_3 = 0x12345678123456781234567812345678;

const bit<128> weight_3_0_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_0_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_0_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_0_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_1_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_1_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_1_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_1_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_2_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_2_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_2_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_2_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_3_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_3_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_3_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_3_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_4_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_4_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_4_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_4_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_5_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_5_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_5_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_5_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_6_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_6_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_6_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_6_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_7_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_7_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_7_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_7_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_8_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_8_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_8_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_8_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_9_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_9_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_9_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_9_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_10_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_10_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_10_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_10_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_11_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_11_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_11_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_11_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_12_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_12_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_12_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_12_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_13_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_13_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_13_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_13_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_14_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_14_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_14_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_14_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_15_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_15_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_15_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_15_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_16_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_16_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_16_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_16_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_17_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_17_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_17_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_17_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_18_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_18_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_18_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_18_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_19_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_19_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_19_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_19_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_20_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_20_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_20_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_20_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_21_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_21_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_21_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_21_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_22_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_22_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_22_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_22_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_23_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_23_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_23_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_23_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_24_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_24_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_24_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_24_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_25_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_25_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_25_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_25_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_26_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_26_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_26_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_26_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_27_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_27_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_27_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_27_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_28_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_28_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_28_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_28_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_29_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_29_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_29_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_29_3 = 0x12345678123456781234567812345678;
const bit<128> weight_3_30_0 = 0x12345678123456781234567812345678;
const bit<128> weight_3_30_1 = 0x12345678123456781234567812345678;
const bit<128> weight_3_30_2 = 0x12345678123456781234567812345678;
const bit<128> weight_3_30_3 = 0x12345678123456781234567812345678;

const bit<128> weight_4_0_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_0_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_0_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_0_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_1_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_1_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_1_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_1_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_2_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_2_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_2_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_2_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_3_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_3_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_3_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_3_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_4_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_4_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_4_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_4_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_5_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_5_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_5_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_5_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_6_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_6_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_6_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_6_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_7_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_7_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_7_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_7_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_8_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_8_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_8_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_8_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_9_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_9_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_9_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_9_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_10_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_10_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_10_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_10_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_11_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_11_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_11_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_11_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_12_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_12_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_12_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_12_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_13_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_13_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_13_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_13_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_14_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_14_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_14_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_14_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_15_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_15_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_15_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_15_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_16_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_16_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_16_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_16_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_17_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_17_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_17_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_17_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_18_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_18_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_18_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_18_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_19_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_19_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_19_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_19_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_20_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_20_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_20_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_20_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_21_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_21_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_21_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_21_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_22_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_22_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_22_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_22_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_23_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_23_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_23_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_23_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_24_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_24_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_24_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_24_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_25_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_25_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_25_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_25_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_26_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_26_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_26_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_26_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_27_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_27_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_27_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_27_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_28_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_28_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_28_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_28_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_29_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_29_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_29_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_29_3 = 0x12345678123456781234567812345678;
const bit<128> weight_4_30_0 = 0x12345678123456781234567812345678;
const bit<128> weight_4_30_1 = 0x12345678123456781234567812345678;
const bit<128> weight_4_30_2 = 0x12345678123456781234567812345678;
const bit<128> weight_4_30_3 = 0x12345678123456781234567812345678;

const bit<128> weight_5_0_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_0_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_0_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_0_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_1_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_1_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_1_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_1_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_2_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_2_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_2_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_2_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_3_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_3_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_3_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_3_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_4_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_4_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_4_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_4_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_5_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_5_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_5_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_5_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_6_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_6_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_6_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_6_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_7_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_7_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_7_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_7_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_8_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_8_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_8_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_8_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_9_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_9_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_9_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_9_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_10_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_10_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_10_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_10_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_11_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_11_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_11_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_11_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_12_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_12_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_12_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_12_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_13_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_13_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_13_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_13_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_14_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_14_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_14_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_14_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_15_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_15_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_15_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_15_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_16_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_16_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_16_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_16_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_17_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_17_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_17_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_17_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_18_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_18_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_18_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_18_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_19_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_19_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_19_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_19_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_20_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_20_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_20_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_20_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_21_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_21_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_21_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_21_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_22_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_22_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_22_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_22_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_23_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_23_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_23_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_23_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_24_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_24_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_24_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_24_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_25_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_25_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_25_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_25_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_26_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_26_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_26_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_26_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_27_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_27_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_27_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_27_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_28_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_28_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_28_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_28_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_29_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_29_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_29_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_29_3 = 0x12345678123456781234567812345678;
const bit<128> weight_5_30_0 = 0x12345678123456781234567812345678;
const bit<128> weight_5_30_1 = 0x12345678123456781234567812345678;
const bit<128> weight_5_30_2 = 0x12345678123456781234567812345678;
const bit<128> weight_5_30_3 = 0x12345678123456781234567812345678;

const bit<128> weight_6_0_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_0_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_0_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_0_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_1_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_1_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_1_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_1_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_2_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_2_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_2_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_2_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_3_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_3_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_3_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_3_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_4_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_4_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_4_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_4_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_5_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_5_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_5_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_5_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_6_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_6_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_6_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_6_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_7_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_7_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_7_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_7_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_8_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_8_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_8_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_8_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_9_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_9_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_9_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_9_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_10_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_10_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_10_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_10_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_11_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_11_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_11_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_11_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_12_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_12_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_12_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_12_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_13_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_13_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_13_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_13_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_14_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_14_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_14_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_14_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_15_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_15_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_15_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_15_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_16_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_16_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_16_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_16_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_17_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_17_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_17_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_17_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_18_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_18_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_18_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_18_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_19_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_19_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_19_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_19_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_20_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_20_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_20_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_20_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_21_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_21_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_21_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_21_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_22_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_22_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_22_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_22_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_23_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_23_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_23_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_23_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_24_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_24_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_24_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_24_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_25_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_25_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_25_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_25_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_26_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_26_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_26_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_26_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_27_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_27_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_27_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_27_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_28_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_28_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_28_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_28_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_29_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_29_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_29_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_29_3 = 0x12345678123456781234567812345678;
const bit<128> weight_6_30_0 = 0x12345678123456781234567812345678;
const bit<128> weight_6_30_1 = 0x12345678123456781234567812345678;
const bit<128> weight_6_30_2 = 0x12345678123456781234567812345678;
const bit<128> weight_6_30_3 = 0x12345678123456781234567812345678;

const bit<128> weight_7_0_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_0_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_0_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_0_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_1_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_1_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_1_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_1_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_2_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_2_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_2_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_2_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_3_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_3_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_3_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_3_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_4_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_4_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_4_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_4_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_5_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_5_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_5_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_5_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_6_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_6_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_6_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_6_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_7_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_7_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_7_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_7_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_8_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_8_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_8_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_8_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_9_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_9_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_9_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_9_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_10_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_10_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_10_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_10_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_11_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_11_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_11_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_11_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_12_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_12_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_12_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_12_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_13_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_13_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_13_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_13_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_14_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_14_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_14_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_14_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_15_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_15_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_15_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_15_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_16_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_16_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_16_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_16_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_17_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_17_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_17_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_17_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_18_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_18_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_18_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_18_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_19_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_19_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_19_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_19_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_20_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_20_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_20_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_20_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_21_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_21_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_21_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_21_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_22_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_22_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_22_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_22_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_23_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_23_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_23_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_23_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_24_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_24_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_24_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_24_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_25_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_25_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_25_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_25_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_26_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_26_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_26_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_26_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_27_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_27_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_27_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_27_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_28_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_28_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_28_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_28_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_29_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_29_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_29_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_29_3 = 0x12345678123456781234567812345678;
const bit<128> weight_7_30_0 = 0x12345678123456781234567812345678;
const bit<128> weight_7_30_1 = 0x12345678123456781234567812345678;
const bit<128> weight_7_30_2 = 0x12345678123456781234567812345678;
const bit<128> weight_7_30_3 = 0x12345678123456781234567812345678;

const bit<128> weight_8_0_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_0_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_0_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_0_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_1_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_1_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_1_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_1_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_2_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_2_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_2_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_2_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_3_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_3_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_3_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_3_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_4_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_4_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_4_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_4_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_5_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_5_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_5_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_5_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_6_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_6_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_6_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_6_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_7_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_7_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_7_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_7_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_8_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_8_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_8_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_8_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_9_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_9_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_9_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_9_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_10_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_10_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_10_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_10_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_11_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_11_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_11_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_11_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_12_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_12_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_12_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_12_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_13_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_13_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_13_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_13_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_14_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_14_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_14_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_14_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_15_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_15_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_15_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_15_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_16_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_16_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_16_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_16_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_17_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_17_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_17_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_17_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_18_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_18_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_18_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_18_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_19_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_19_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_19_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_19_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_20_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_20_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_20_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_20_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_21_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_21_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_21_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_21_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_22_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_22_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_22_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_22_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_23_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_23_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_23_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_23_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_24_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_24_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_24_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_24_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_25_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_25_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_25_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_25_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_26_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_26_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_26_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_26_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_27_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_27_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_27_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_27_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_28_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_28_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_28_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_28_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_29_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_29_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_29_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_29_3 = 0x12345678123456781234567812345678;
const bit<128> weight_8_30_0 = 0x12345678123456781234567812345678;
const bit<128> weight_8_30_1 = 0x12345678123456781234567812345678;
const bit<128> weight_8_30_2 = 0x12345678123456781234567812345678;
const bit<128> weight_8_30_3 = 0x12345678123456781234567812345678;

const bit<128> weight_9_0_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_0_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_0_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_0_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_1_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_1_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_1_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_1_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_2_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_2_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_2_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_2_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_3_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_3_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_3_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_3_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_4_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_4_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_4_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_4_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_5_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_5_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_5_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_5_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_6_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_6_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_6_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_6_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_7_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_7_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_7_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_7_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_8_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_8_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_8_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_8_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_9_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_9_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_9_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_9_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_10_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_10_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_10_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_10_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_11_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_11_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_11_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_11_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_12_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_12_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_12_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_12_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_13_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_13_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_13_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_13_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_14_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_14_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_14_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_14_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_15_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_15_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_15_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_15_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_16_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_16_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_16_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_16_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_17_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_17_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_17_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_17_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_18_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_18_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_18_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_18_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_19_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_19_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_19_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_19_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_20_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_20_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_20_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_20_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_21_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_21_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_21_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_21_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_22_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_22_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_22_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_22_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_23_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_23_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_23_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_23_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_24_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_24_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_24_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_24_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_25_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_25_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_25_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_25_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_26_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_26_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_26_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_26_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_27_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_27_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_27_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_27_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_28_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_28_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_28_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_28_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_29_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_29_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_29_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_29_3 = 0x12345678123456781234567812345678;
const bit<128> weight_9_30_0 = 0x12345678123456781234567812345678;
const bit<128> weight_9_30_1 = 0x12345678123456781234567812345678;
const bit<128> weight_9_30_2 = 0x12345678123456781234567812345678;
const bit<128> weight_9_30_3 = 0x12345678123456781234567812345678;

const bit<128> weight_10_0_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_0_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_0_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_0_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_1_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_1_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_1_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_1_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_2_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_2_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_2_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_2_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_3_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_3_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_3_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_3_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_4_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_4_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_4_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_4_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_5_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_5_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_5_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_5_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_6_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_6_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_6_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_6_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_7_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_7_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_7_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_7_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_8_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_8_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_8_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_8_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_9_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_9_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_9_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_9_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_10_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_10_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_10_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_10_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_11_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_11_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_11_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_11_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_12_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_12_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_12_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_12_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_13_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_13_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_13_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_13_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_14_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_14_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_14_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_14_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_15_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_15_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_15_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_15_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_16_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_16_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_16_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_16_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_17_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_17_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_17_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_17_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_18_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_18_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_18_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_18_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_19_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_19_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_19_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_19_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_20_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_20_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_20_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_20_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_21_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_21_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_21_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_21_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_22_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_22_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_22_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_22_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_23_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_23_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_23_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_23_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_24_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_24_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_24_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_24_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_25_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_25_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_25_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_25_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_26_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_26_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_26_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_26_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_27_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_27_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_27_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_27_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_28_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_28_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_28_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_28_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_29_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_29_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_29_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_29_3 = 0x12345678123456781234567812345678;
const bit<128> weight_10_30_0 = 0x12345678123456781234567812345678;
const bit<128> weight_10_30_1 = 0x12345678123456781234567812345678;
const bit<128> weight_10_30_2 = 0x12345678123456781234567812345678;
const bit<128> weight_10_30_3 = 0x12345678123456781234567812345678;

const bit<128> weight_11_0_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_0_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_0_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_0_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_1_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_1_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_1_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_1_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_2_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_2_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_2_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_2_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_3_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_3_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_3_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_3_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_4_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_4_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_4_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_4_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_5_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_5_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_5_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_5_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_6_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_6_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_6_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_6_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_7_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_7_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_7_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_7_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_8_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_8_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_8_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_8_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_9_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_9_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_9_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_9_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_10_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_10_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_10_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_10_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_11_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_11_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_11_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_11_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_12_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_12_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_12_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_12_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_13_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_13_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_13_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_13_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_14_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_14_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_14_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_14_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_15_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_15_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_15_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_15_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_16_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_16_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_16_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_16_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_17_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_17_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_17_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_17_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_18_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_18_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_18_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_18_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_19_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_19_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_19_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_19_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_20_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_20_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_20_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_20_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_21_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_21_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_21_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_21_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_22_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_22_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_22_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_22_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_23_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_23_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_23_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_23_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_24_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_24_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_24_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_24_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_25_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_25_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_25_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_25_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_26_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_26_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_26_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_26_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_27_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_27_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_27_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_27_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_28_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_28_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_28_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_28_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_29_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_29_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_29_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_29_3 = 0x12345678123456781234567812345678;
const bit<128> weight_11_30_0 = 0x12345678123456781234567812345678;
const bit<128> weight_11_30_1 = 0x12345678123456781234567812345678;
const bit<128> weight_11_30_2 = 0x12345678123456781234567812345678;
const bit<128> weight_11_30_3 = 0x12345678123456781234567812345678;

const bit<128> weight_12_0_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_0_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_0_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_0_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_1_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_1_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_1_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_1_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_2_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_2_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_2_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_2_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_3_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_3_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_3_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_3_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_4_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_4_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_4_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_4_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_5_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_5_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_5_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_5_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_6_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_6_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_6_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_6_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_7_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_7_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_7_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_7_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_8_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_8_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_8_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_8_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_9_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_9_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_9_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_9_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_10_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_10_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_10_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_10_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_11_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_11_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_11_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_11_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_12_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_12_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_12_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_12_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_13_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_13_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_13_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_13_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_14_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_14_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_14_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_14_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_15_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_15_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_15_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_15_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_16_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_16_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_16_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_16_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_17_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_17_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_17_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_17_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_18_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_18_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_18_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_18_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_19_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_19_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_19_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_19_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_20_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_20_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_20_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_20_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_21_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_21_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_21_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_21_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_22_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_22_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_22_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_22_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_23_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_23_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_23_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_23_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_24_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_24_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_24_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_24_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_25_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_25_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_25_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_25_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_26_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_26_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_26_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_26_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_27_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_27_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_27_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_27_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_28_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_28_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_28_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_28_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_29_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_29_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_29_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_29_3 = 0x12345678123456781234567812345678;
const bit<128> weight_12_30_0 = 0x12345678123456781234567812345678;
const bit<128> weight_12_30_1 = 0x12345678123456781234567812345678;
const bit<128> weight_12_30_2 = 0x12345678123456781234567812345678;
const bit<128> weight_12_30_3 = 0x12345678123456781234567812345678;

header p4calc_t {
    bit<8>      p;
    bit<8>      four;
    bit<8>      ver;


//s1 input
    bit<32>     s1_index;
    bit<32>     s1_max_pool_index;
    bit<40>     s1_input_data;
    
// s1 output
    bit<32>     s1_replication;
    bit<64>     s1_res;

//s2 output
    bit<32>     s2_replication;
    bit<128>    s2_res;
    bit<32>     s2_index;

//s3 output
    bit<32>     s3_replication;
    bit<104>    s3_res;

//s4 output
    bit<32>     s4_replication;
    bit<200>    s4_res;

//s5 output
    bit<8>    s5_res;
}

struct headers {
    ethernet_t   ethernet;
    p4calc_t     p4calc;
}


struct metadata {
}

/*************************************************************************
 ***********************  P A R S E R  ***********************************
 *************************************************************************/
parser MyParser(packet_in packet,
                out headers hdr,
                inout metadata meta,
                inout standard_metadata_t standard_metadata) {

    state start {
        packet.extract(hdr.ethernet);
        transition select(hdr.ethernet.etherType) {
            P4CALC_ETYPE : check_p4calc;
            default      : accept;
        }
    }

    state check_p4calc {
        transition select(packet.lookahead<p4calc_t>().p,
        packet.lookahead<p4calc_t>().four,
        packet.lookahead<p4calc_t>().ver) {
            (P4CALC_P, P4CALC_4, P4CALC_VER) : parse_p4calc;
            default                          : accept;
        }
    }

    state parse_p4calc {
        packet.extract(hdr.p4calc);
        transition accept;
    }
}

/*************************************************************************
 ************   C H E C K S U M    V E R I F I C A T I O N   *************
 *************************************************************************/
control MyVerifyChecksum(inout headers hdr,
                         inout metadata meta) {
    apply { }
}

/*************************************************************************
 **************  I N G R E S S   P R O C E S S I N G   *******************
 *************************************************************************/
control MyIngress(inout headers hdr,
                  inout metadata meta,
                  inout standard_metadata_t standard_metadata) {

    // register<bit<8>>(1984 * 13) data;
    register<bit<8>>(13) res;

    /**
     * 
     * Number of operations:
     * - read: 13
     * 
     */
    action readData(out bit<104> data) {
        res.read(data[7:0], 0);
        res.read(data[15:8], 1);
        res.read(data[23:16], 2);
        res.read(data[31:24], 3);
        res.read(data[39:32], 4);
        res.read(data[47:40], 5);
        res.read(data[55:48], 6);
        res.read(data[63:56], 7);
        res.read(data[71:64], 8);
        res.read(data[79:72], 9);
        res.read(data[87:80], 10);
        res.read(data[95:88], 11);
        res.read(data[103:96], 12);
    }


    /**
    * Number of operations:
     * - readData: 1
     *
     *
     * @param index The index of the broadcast message.
     */
    action send_broadcast() {
        readData(hdr.p4calc.s3_res);
        hdr.p4calc.s3_replication = replication;
    }

    /**
     * 
     * Number of operations:
     * - read: 1
     * - write: 1
     * - add: 16
     * - multi: 16
     * 
     */
    action operation_calcAndWrite(in bit<128> weight, in bit<32> weight_number) {
        bit<8> temp=0;
        res.read(temp, weight_number);
        temp = temp +
        hdr.p4calc.s2_res[7:0]     * weight[7:0] +
        hdr.p4calc.s2_res[15:8]    * weight[15:8] +
        hdr.p4calc.s2_res[23:16]   * weight[23:16] +
        hdr.p4calc.s2_res[31:24]   * weight[31:24] +
        hdr.p4calc.s2_res[39:32]   * weight[39:32] +
        hdr.p4calc.s2_res[47:40]   * weight[47:40] +
        hdr.p4calc.s2_res[55:48]   * weight[55:48] +
        hdr.p4calc.s2_res[63:56]   * weight[63:56] +
        hdr.p4calc.s2_res[71:64]   * weight[71:64] +
        hdr.p4calc.s2_res[79:72]   * weight[79:72] +
        hdr.p4calc.s2_res[87:80]   * weight[87:80] +
        hdr.p4calc.s2_res[95:88]   * weight[95:88] +
        hdr.p4calc.s2_res[103:96]  * weight[103:96] +
        hdr.p4calc.s2_res[111:104] * weight[111:104] +
        hdr.p4calc.s2_res[119:112] * weight[119:112] +
        hdr.p4calc.s2_res[127:120] * weight[127:120];
        res.write(weight_number, temp);
    }

    /**
     * 
     * Number of operations:
     * - operation_calcAndWrite: 13
     * 
     */
    action operation_calc(bit<128> weight1, bit<128> weight2, bit<128> weight3, bit<128> weight4, bit<128> weight5, bit<128> weight6, bit<128> weight7, bit<128> weight8, bit<128> weight9, bit<128> weight10, bit<128> weight11, bit<128> weight12, bit<128> weight13) {
        operation_calcAndWrite(weight1,  0 );
        operation_calcAndWrite(weight2,  1 );
        operation_calcAndWrite(weight3,  2 );
        operation_calcAndWrite(weight4,  3 );
        operation_calcAndWrite(weight5,  4 );
        operation_calcAndWrite(weight6,  5 );
        operation_calcAndWrite(weight7,  6 );
        operation_calcAndWrite(weight8,  7 );
        operation_calcAndWrite(weight9,  8 );
        operation_calcAndWrite(weight10, 9);
        operation_calcAndWrite(weight11, 10);
        operation_calcAndWrite(weight12, 11);
        operation_calcAndWrite(weight13, 12);
        mark_to_drop(standard_metadata);
    }

    /**
     * 
     * Number of operations:
     * - operation_calc: 1
     * - send_broadcast: 1
     * 
     */
    action operation_calcAndNext(bit<128> weight1, bit<128> weight2, bit<128> weight3, bit<128> weight4, bit<128> weight5, bit<128> weight6, bit<128> weight7, bit<128> weight8, bit<128> weight9, bit<128> weight10, bit<128> weight11, bit<128> weight12, bit<128> weight13) {
        operation_calc(weight1, weight2, weight3, weight4, weight5, weight6, weight7, weight8, weight9, weight10, weight11, weight12, weight13);
        send_broadcast();
    }


    action operation_drop() {
        mark_to_drop(standard_metadata);
    }
    

    table calculate {
        key = {
            hdr.p4calc.s2_index                  : exact;
            hdr.p4calc.s2_replication          : exact;
        }
        actions = {
            operation_drop;
            operation_calc;
            operation_calcAndNext;
        }
        const default_action = operation_drop();
        const entries = {
            (0x0, 0x0): operation_calc(weight_0_0_0, weight_1_0_0, weight_2_0_0, weight_3_0_0, weight_4_0_0, weight_5_0_0, weight_6_0_0, weight_7_0_0, weight_8_0_0, weight_9_0_0, weight_10_0_0, weight_11_0_0, weight_12_0_0);
            (0x0, 0x1): operation_calc(weight_0_0_1, weight_1_0_1, weight_2_0_1, weight_3_0_1, weight_4_0_1, weight_5_0_1, weight_6_0_1, weight_7_0_1, weight_8_0_1, weight_9_0_1, weight_10_0_1, weight_11_0_1, weight_12_0_1);
            (0x0, 0x2): operation_calc(weight_0_0_2, weight_1_0_2, weight_2_0_2, weight_3_0_2, weight_4_0_2, weight_5_0_2, weight_6_0_2, weight_7_0_2, weight_8_0_2, weight_9_0_2, weight_10_0_2, weight_11_0_2, weight_12_0_2);
            (0x0, 0x3): operation_calc(weight_0_0_3, weight_1_0_3, weight_2_0_3, weight_3_0_3, weight_4_0_3, weight_5_0_3, weight_6_0_3, weight_7_0_3, weight_8_0_3, weight_9_0_3, weight_10_0_3, weight_11_0_3, weight_12_0_3);
            (0x1, 0x0): operation_calc(weight_0_1_0, weight_1_1_0, weight_2_1_0, weight_3_1_0, weight_4_1_0, weight_5_1_0, weight_6_1_0, weight_7_1_0, weight_8_1_0, weight_9_1_0, weight_10_1_0, weight_11_1_0, weight_12_1_0);
            (0x1, 0x1): operation_calc(weight_0_1_1, weight_1_1_1, weight_2_1_1, weight_3_1_1, weight_4_1_1, weight_5_1_1, weight_6_1_1, weight_7_1_1, weight_8_1_1, weight_9_1_1, weight_10_1_1, weight_11_1_1, weight_12_1_1);
            (0x1, 0x2): operation_calc(weight_0_1_2, weight_1_1_2, weight_2_1_2, weight_3_1_2, weight_4_1_2, weight_5_1_2, weight_6_1_2, weight_7_1_2, weight_8_1_2, weight_9_1_2, weight_10_1_2, weight_11_1_2, weight_12_1_2);
            (0x1, 0x3): operation_calc(weight_0_1_3, weight_1_1_3, weight_2_1_3, weight_3_1_3, weight_4_1_3, weight_5_1_3, weight_6_1_3, weight_7_1_3, weight_8_1_3, weight_9_1_3, weight_10_1_3, weight_11_1_3, weight_12_1_3);
            (0x2, 0x0): operation_calc(weight_0_2_0, weight_1_2_0, weight_2_2_0, weight_3_2_0, weight_4_2_0, weight_5_2_0, weight_6_2_0, weight_7_2_0, weight_8_2_0, weight_9_2_0, weight_10_2_0, weight_11_2_0, weight_12_2_0);
            (0x2, 0x1): operation_calc(weight_0_2_1, weight_1_2_1, weight_2_2_1, weight_3_2_1, weight_4_2_1, weight_5_2_1, weight_6_2_1, weight_7_2_1, weight_8_2_1, weight_9_2_1, weight_10_2_1, weight_11_2_1, weight_12_2_1);
            (0x2, 0x2): operation_calc(weight_0_2_2, weight_1_2_2, weight_2_2_2, weight_3_2_2, weight_4_2_2, weight_5_2_2, weight_6_2_2, weight_7_2_2, weight_8_2_2, weight_9_2_2, weight_10_2_2, weight_11_2_2, weight_12_2_2);
            (0x2, 0x3): operation_calc(weight_0_2_3, weight_1_2_3, weight_2_2_3, weight_3_2_3, weight_4_2_3, weight_5_2_3, weight_6_2_3, weight_7_2_3, weight_8_2_3, weight_9_2_3, weight_10_2_3, weight_11_2_3, weight_12_2_3);
            (0x3, 0x0): operation_calc(weight_0_3_0, weight_1_3_0, weight_2_3_0, weight_3_3_0, weight_4_3_0, weight_5_3_0, weight_6_3_0, weight_7_3_0, weight_8_3_0, weight_9_3_0, weight_10_3_0, weight_11_3_0, weight_12_3_0);
            (0x3, 0x1): operation_calc(weight_0_3_1, weight_1_3_1, weight_2_3_1, weight_3_3_1, weight_4_3_1, weight_5_3_1, weight_6_3_1, weight_7_3_1, weight_8_3_1, weight_9_3_1, weight_10_3_1, weight_11_3_1, weight_12_3_1);
            (0x3, 0x2): operation_calc(weight_0_3_2, weight_1_3_2, weight_2_3_2, weight_3_3_2, weight_4_3_2, weight_5_3_2, weight_6_3_2, weight_7_3_2, weight_8_3_2, weight_9_3_2, weight_10_3_2, weight_11_3_2, weight_12_3_2);
            (0x3, 0x3): operation_calc(weight_0_3_3, weight_1_3_3, weight_2_3_3, weight_3_3_3, weight_4_3_3, weight_5_3_3, weight_6_3_3, weight_7_3_3, weight_8_3_3, weight_9_3_3, weight_10_3_3, weight_11_3_3, weight_12_3_3);
            (0x4, 0x0): operation_calc(weight_0_4_0, weight_1_4_0, weight_2_4_0, weight_3_4_0, weight_4_4_0, weight_5_4_0, weight_6_4_0, weight_7_4_0, weight_8_4_0, weight_9_4_0, weight_10_4_0, weight_11_4_0, weight_12_4_0);
            (0x4, 0x1): operation_calc(weight_0_4_1, weight_1_4_1, weight_2_4_1, weight_3_4_1, weight_4_4_1, weight_5_4_1, weight_6_4_1, weight_7_4_1, weight_8_4_1, weight_9_4_1, weight_10_4_1, weight_11_4_1, weight_12_4_1);
            (0x4, 0x2): operation_calc(weight_0_4_2, weight_1_4_2, weight_2_4_2, weight_3_4_2, weight_4_4_2, weight_5_4_2, weight_6_4_2, weight_7_4_2, weight_8_4_2, weight_9_4_2, weight_10_4_2, weight_11_4_2, weight_12_4_2);
            (0x4, 0x3): operation_calc(weight_0_4_3, weight_1_4_3, weight_2_4_3, weight_3_4_3, weight_4_4_3, weight_5_4_3, weight_6_4_3, weight_7_4_3, weight_8_4_3, weight_9_4_3, weight_10_4_3, weight_11_4_3, weight_12_4_3);
            (0x5, 0x0): operation_calc(weight_0_5_0, weight_1_5_0, weight_2_5_0, weight_3_5_0, weight_4_5_0, weight_5_5_0, weight_6_5_0, weight_7_5_0, weight_8_5_0, weight_9_5_0, weight_10_5_0, weight_11_5_0, weight_12_5_0);
            (0x5, 0x1): operation_calc(weight_0_5_1, weight_1_5_1, weight_2_5_1, weight_3_5_1, weight_4_5_1, weight_5_5_1, weight_6_5_1, weight_7_5_1, weight_8_5_1, weight_9_5_1, weight_10_5_1, weight_11_5_1, weight_12_5_1);
            (0x5, 0x2): operation_calc(weight_0_5_2, weight_1_5_2, weight_2_5_2, weight_3_5_2, weight_4_5_2, weight_5_5_2, weight_6_5_2, weight_7_5_2, weight_8_5_2, weight_9_5_2, weight_10_5_2, weight_11_5_2, weight_12_5_2);
            (0x5, 0x3): operation_calc(weight_0_5_3, weight_1_5_3, weight_2_5_3, weight_3_5_3, weight_4_5_3, weight_5_5_3, weight_6_5_3, weight_7_5_3, weight_8_5_3, weight_9_5_3, weight_10_5_3, weight_11_5_3, weight_12_5_3);
            (0x6, 0x0): operation_calc(weight_0_6_0, weight_1_6_0, weight_2_6_0, weight_3_6_0, weight_4_6_0, weight_5_6_0, weight_6_6_0, weight_7_6_0, weight_8_6_0, weight_9_6_0, weight_10_6_0, weight_11_6_0, weight_12_6_0);
            (0x6, 0x1): operation_calc(weight_0_6_1, weight_1_6_1, weight_2_6_1, weight_3_6_1, weight_4_6_1, weight_5_6_1, weight_6_6_1, weight_7_6_1, weight_8_6_1, weight_9_6_1, weight_10_6_1, weight_11_6_1, weight_12_6_1);
            (0x6, 0x2): operation_calc(weight_0_6_2, weight_1_6_2, weight_2_6_2, weight_3_6_2, weight_4_6_2, weight_5_6_2, weight_6_6_2, weight_7_6_2, weight_8_6_2, weight_9_6_2, weight_10_6_2, weight_11_6_2, weight_12_6_2);
            (0x6, 0x3): operation_calc(weight_0_6_3, weight_1_6_3, weight_2_6_3, weight_3_6_3, weight_4_6_3, weight_5_6_3, weight_6_6_3, weight_7_6_3, weight_8_6_3, weight_9_6_3, weight_10_6_3, weight_11_6_3, weight_12_6_3);
            (0x7, 0x0): operation_calc(weight_0_7_0, weight_1_7_0, weight_2_7_0, weight_3_7_0, weight_4_7_0, weight_5_7_0, weight_6_7_0, weight_7_7_0, weight_8_7_0, weight_9_7_0, weight_10_7_0, weight_11_7_0, weight_12_7_0);
            (0x7, 0x1): operation_calc(weight_0_7_1, weight_1_7_1, weight_2_7_1, weight_3_7_1, weight_4_7_1, weight_5_7_1, weight_6_7_1, weight_7_7_1, weight_8_7_1, weight_9_7_1, weight_10_7_1, weight_11_7_1, weight_12_7_1);
            (0x7, 0x2): operation_calc(weight_0_7_2, weight_1_7_2, weight_2_7_2, weight_3_7_2, weight_4_7_2, weight_5_7_2, weight_6_7_2, weight_7_7_2, weight_8_7_2, weight_9_7_2, weight_10_7_2, weight_11_7_2, weight_12_7_2);
            (0x7, 0x3): operation_calc(weight_0_7_3, weight_1_7_3, weight_2_7_3, weight_3_7_3, weight_4_7_3, weight_5_7_3, weight_6_7_3, weight_7_7_3, weight_8_7_3, weight_9_7_3, weight_10_7_3, weight_11_7_3, weight_12_7_3);
            (0x8, 0x0): operation_calc(weight_0_8_0, weight_1_8_0, weight_2_8_0, weight_3_8_0, weight_4_8_0, weight_5_8_0, weight_6_8_0, weight_7_8_0, weight_8_8_0, weight_9_8_0, weight_10_8_0, weight_11_8_0, weight_12_8_0);
            (0x8, 0x1): operation_calc(weight_0_8_1, weight_1_8_1, weight_2_8_1, weight_3_8_1, weight_4_8_1, weight_5_8_1, weight_6_8_1, weight_7_8_1, weight_8_8_1, weight_9_8_1, weight_10_8_1, weight_11_8_1, weight_12_8_1);
            (0x8, 0x2): operation_calc(weight_0_8_2, weight_1_8_2, weight_2_8_2, weight_3_8_2, weight_4_8_2, weight_5_8_2, weight_6_8_2, weight_7_8_2, weight_8_8_2, weight_9_8_2, weight_10_8_2, weight_11_8_2, weight_12_8_2);
            (0x8, 0x3): operation_calc(weight_0_8_3, weight_1_8_3, weight_2_8_3, weight_3_8_3, weight_4_8_3, weight_5_8_3, weight_6_8_3, weight_7_8_3, weight_8_8_3, weight_9_8_3, weight_10_8_3, weight_11_8_3, weight_12_8_3);
            (0x9, 0x0): operation_calc(weight_0_9_0, weight_1_9_0, weight_2_9_0, weight_3_9_0, weight_4_9_0, weight_5_9_0, weight_6_9_0, weight_7_9_0, weight_8_9_0, weight_9_9_0, weight_10_9_0, weight_11_9_0, weight_12_9_0);
            (0x9, 0x1): operation_calc(weight_0_9_1, weight_1_9_1, weight_2_9_1, weight_3_9_1, weight_4_9_1, weight_5_9_1, weight_6_9_1, weight_7_9_1, weight_8_9_1, weight_9_9_1, weight_10_9_1, weight_11_9_1, weight_12_9_1);
            (0x9, 0x2): operation_calc(weight_0_9_2, weight_1_9_2, weight_2_9_2, weight_3_9_2, weight_4_9_2, weight_5_9_2, weight_6_9_2, weight_7_9_2, weight_8_9_2, weight_9_9_2, weight_10_9_2, weight_11_9_2, weight_12_9_2);
            (0x9, 0x3): operation_calc(weight_0_9_3, weight_1_9_3, weight_2_9_3, weight_3_9_3, weight_4_9_3, weight_5_9_3, weight_6_9_3, weight_7_9_3, weight_8_9_3, weight_9_9_3, weight_10_9_3, weight_11_9_3, weight_12_9_3);
            (0xa, 0x0): operation_calc(weight_0_10_0, weight_1_10_0, weight_2_10_0, weight_3_10_0, weight_4_10_0, weight_5_10_0, weight_6_10_0, weight_7_10_0, weight_8_10_0, weight_9_10_0, weight_10_10_0, weight_11_10_0, weight_12_10_0);
            (0xa, 0x1): operation_calc(weight_0_10_1, weight_1_10_1, weight_2_10_1, weight_3_10_1, weight_4_10_1, weight_5_10_1, weight_6_10_1, weight_7_10_1, weight_8_10_1, weight_9_10_1, weight_10_10_1, weight_11_10_1, weight_12_10_1);
            (0xa, 0x2): operation_calc(weight_0_10_2, weight_1_10_2, weight_2_10_2, weight_3_10_2, weight_4_10_2, weight_5_10_2, weight_6_10_2, weight_7_10_2, weight_8_10_2, weight_9_10_2, weight_10_10_2, weight_11_10_2, weight_12_10_2);
            (0xa, 0x3): operation_calc(weight_0_10_3, weight_1_10_3, weight_2_10_3, weight_3_10_3, weight_4_10_3, weight_5_10_3, weight_6_10_3, weight_7_10_3, weight_8_10_3, weight_9_10_3, weight_10_10_3, weight_11_10_3, weight_12_10_3);
            (0xb, 0x0): operation_calc(weight_0_11_0, weight_1_11_0, weight_2_11_0, weight_3_11_0, weight_4_11_0, weight_5_11_0, weight_6_11_0, weight_7_11_0, weight_8_11_0, weight_9_11_0, weight_10_11_0, weight_11_11_0, weight_12_11_0);
            (0xb, 0x1): operation_calc(weight_0_11_1, weight_1_11_1, weight_2_11_1, weight_3_11_1, weight_4_11_1, weight_5_11_1, weight_6_11_1, weight_7_11_1, weight_8_11_1, weight_9_11_1, weight_10_11_1, weight_11_11_1, weight_12_11_1);
            (0xb, 0x2): operation_calc(weight_0_11_2, weight_1_11_2, weight_2_11_2, weight_3_11_2, weight_4_11_2, weight_5_11_2, weight_6_11_2, weight_7_11_2, weight_8_11_2, weight_9_11_2, weight_10_11_2, weight_11_11_2, weight_12_11_2);
            (0xb, 0x3): operation_calc(weight_0_11_3, weight_1_11_3, weight_2_11_3, weight_3_11_3, weight_4_11_3, weight_5_11_3, weight_6_11_3, weight_7_11_3, weight_8_11_3, weight_9_11_3, weight_10_11_3, weight_11_11_3, weight_12_11_3);
            (0xc, 0x0): operation_calc(weight_0_12_0, weight_1_12_0, weight_2_12_0, weight_3_12_0, weight_4_12_0, weight_5_12_0, weight_6_12_0, weight_7_12_0, weight_8_12_0, weight_9_12_0, weight_10_12_0, weight_11_12_0, weight_12_12_0);
            (0xc, 0x1): operation_calc(weight_0_12_1, weight_1_12_1, weight_2_12_1, weight_3_12_1, weight_4_12_1, weight_5_12_1, weight_6_12_1, weight_7_12_1, weight_8_12_1, weight_9_12_1, weight_10_12_1, weight_11_12_1, weight_12_12_1);
            (0xc, 0x2): operation_calc(weight_0_12_2, weight_1_12_2, weight_2_12_2, weight_3_12_2, weight_4_12_2, weight_5_12_2, weight_6_12_2, weight_7_12_2, weight_8_12_2, weight_9_12_2, weight_10_12_2, weight_11_12_2, weight_12_12_2);
            (0xc, 0x3): operation_calc(weight_0_12_3, weight_1_12_3, weight_2_12_3, weight_3_12_3, weight_4_12_3, weight_5_12_3, weight_6_12_3, weight_7_12_3, weight_8_12_3, weight_9_12_3, weight_10_12_3, weight_11_12_3, weight_12_12_3);
            (0xd, 0x0): operation_calc(weight_0_13_0, weight_1_13_0, weight_2_13_0, weight_3_13_0, weight_4_13_0, weight_5_13_0, weight_6_13_0, weight_7_13_0, weight_8_13_0, weight_9_13_0, weight_10_13_0, weight_11_13_0, weight_12_13_0);
            (0xd, 0x1): operation_calc(weight_0_13_1, weight_1_13_1, weight_2_13_1, weight_3_13_1, weight_4_13_1, weight_5_13_1, weight_6_13_1, weight_7_13_1, weight_8_13_1, weight_9_13_1, weight_10_13_1, weight_11_13_1, weight_12_13_1);
            (0xd, 0x2): operation_calc(weight_0_13_2, weight_1_13_2, weight_2_13_2, weight_3_13_2, weight_4_13_2, weight_5_13_2, weight_6_13_2, weight_7_13_2, weight_8_13_2, weight_9_13_2, weight_10_13_2, weight_11_13_2, weight_12_13_2);
            (0xd, 0x3): operation_calc(weight_0_13_3, weight_1_13_3, weight_2_13_3, weight_3_13_3, weight_4_13_3, weight_5_13_3, weight_6_13_3, weight_7_13_3, weight_8_13_3, weight_9_13_3, weight_10_13_3, weight_11_13_3, weight_12_13_3);
            (0xe, 0x0): operation_calc(weight_0_14_0, weight_1_14_0, weight_2_14_0, weight_3_14_0, weight_4_14_0, weight_5_14_0, weight_6_14_0, weight_7_14_0, weight_8_14_0, weight_9_14_0, weight_10_14_0, weight_11_14_0, weight_12_14_0);
            (0xe, 0x1): operation_calc(weight_0_14_1, weight_1_14_1, weight_2_14_1, weight_3_14_1, weight_4_14_1, weight_5_14_1, weight_6_14_1, weight_7_14_1, weight_8_14_1, weight_9_14_1, weight_10_14_1, weight_11_14_1, weight_12_14_1);
            (0xe, 0x2): operation_calc(weight_0_14_2, weight_1_14_2, weight_2_14_2, weight_3_14_2, weight_4_14_2, weight_5_14_2, weight_6_14_2, weight_7_14_2, weight_8_14_2, weight_9_14_2, weight_10_14_2, weight_11_14_2, weight_12_14_2);
            (0xe, 0x3): operation_calc(weight_0_14_3, weight_1_14_3, weight_2_14_3, weight_3_14_3, weight_4_14_3, weight_5_14_3, weight_6_14_3, weight_7_14_3, weight_8_14_3, weight_9_14_3, weight_10_14_3, weight_11_14_3, weight_12_14_3);
            (0xf, 0x0): operation_calc(weight_0_15_0, weight_1_15_0, weight_2_15_0, weight_3_15_0, weight_4_15_0, weight_5_15_0, weight_6_15_0, weight_7_15_0, weight_8_15_0, weight_9_15_0, weight_10_15_0, weight_11_15_0, weight_12_15_0);
            (0xf, 0x1): operation_calc(weight_0_15_1, weight_1_15_1, weight_2_15_1, weight_3_15_1, weight_4_15_1, weight_5_15_1, weight_6_15_1, weight_7_15_1, weight_8_15_1, weight_9_15_1, weight_10_15_1, weight_11_15_1, weight_12_15_1);
            (0xf, 0x2): operation_calc(weight_0_15_2, weight_1_15_2, weight_2_15_2, weight_3_15_2, weight_4_15_2, weight_5_15_2, weight_6_15_2, weight_7_15_2, weight_8_15_2, weight_9_15_2, weight_10_15_2, weight_11_15_2, weight_12_15_2);
            (0xf, 0x3): operation_calc(weight_0_15_3, weight_1_15_3, weight_2_15_3, weight_3_15_3, weight_4_15_3, weight_5_15_3, weight_6_15_3, weight_7_15_3, weight_8_15_3, weight_9_15_3, weight_10_15_3, weight_11_15_3, weight_12_15_3);
            (0x10, 0x0): operation_calc(weight_0_16_0, weight_1_16_0, weight_2_16_0, weight_3_16_0, weight_4_16_0, weight_5_16_0, weight_6_16_0, weight_7_16_0, weight_8_16_0, weight_9_16_0, weight_10_16_0, weight_11_16_0, weight_12_16_0);
            (0x10, 0x1): operation_calc(weight_0_16_1, weight_1_16_1, weight_2_16_1, weight_3_16_1, weight_4_16_1, weight_5_16_1, weight_6_16_1, weight_7_16_1, weight_8_16_1, weight_9_16_1, weight_10_16_1, weight_11_16_1, weight_12_16_1);
            (0x10, 0x2): operation_calc(weight_0_16_2, weight_1_16_2, weight_2_16_2, weight_3_16_2, weight_4_16_2, weight_5_16_2, weight_6_16_2, weight_7_16_2, weight_8_16_2, weight_9_16_2, weight_10_16_2, weight_11_16_2, weight_12_16_2);
            (0x10, 0x3): operation_calc(weight_0_16_3, weight_1_16_3, weight_2_16_3, weight_3_16_3, weight_4_16_3, weight_5_16_3, weight_6_16_3, weight_7_16_3, weight_8_16_3, weight_9_16_3, weight_10_16_3, weight_11_16_3, weight_12_16_3);
            (0x11, 0x0): operation_calc(weight_0_17_0, weight_1_17_0, weight_2_17_0, weight_3_17_0, weight_4_17_0, weight_5_17_0, weight_6_17_0, weight_7_17_0, weight_8_17_0, weight_9_17_0, weight_10_17_0, weight_11_17_0, weight_12_17_0);
            (0x11, 0x1): operation_calc(weight_0_17_1, weight_1_17_1, weight_2_17_1, weight_3_17_1, weight_4_17_1, weight_5_17_1, weight_6_17_1, weight_7_17_1, weight_8_17_1, weight_9_17_1, weight_10_17_1, weight_11_17_1, weight_12_17_1);
            (0x11, 0x2): operation_calc(weight_0_17_2, weight_1_17_2, weight_2_17_2, weight_3_17_2, weight_4_17_2, weight_5_17_2, weight_6_17_2, weight_7_17_2, weight_8_17_2, weight_9_17_2, weight_10_17_2, weight_11_17_2, weight_12_17_2);
            (0x11, 0x3): operation_calc(weight_0_17_3, weight_1_17_3, weight_2_17_3, weight_3_17_3, weight_4_17_3, weight_5_17_3, weight_6_17_3, weight_7_17_3, weight_8_17_3, weight_9_17_3, weight_10_17_3, weight_11_17_3, weight_12_17_3);
            (0x12, 0x0): operation_calc(weight_0_18_0, weight_1_18_0, weight_2_18_0, weight_3_18_0, weight_4_18_0, weight_5_18_0, weight_6_18_0, weight_7_18_0, weight_8_18_0, weight_9_18_0, weight_10_18_0, weight_11_18_0, weight_12_18_0);
            (0x12, 0x1): operation_calc(weight_0_18_1, weight_1_18_1, weight_2_18_1, weight_3_18_1, weight_4_18_1, weight_5_18_1, weight_6_18_1, weight_7_18_1, weight_8_18_1, weight_9_18_1, weight_10_18_1, weight_11_18_1, weight_12_18_1);
            (0x12, 0x2): operation_calc(weight_0_18_2, weight_1_18_2, weight_2_18_2, weight_3_18_2, weight_4_18_2, weight_5_18_2, weight_6_18_2, weight_7_18_2, weight_8_18_2, weight_9_18_2, weight_10_18_2, weight_11_18_2, weight_12_18_2);
            (0x12, 0x3): operation_calc(weight_0_18_3, weight_1_18_3, weight_2_18_3, weight_3_18_3, weight_4_18_3, weight_5_18_3, weight_6_18_3, weight_7_18_3, weight_8_18_3, weight_9_18_3, weight_10_18_3, weight_11_18_3, weight_12_18_3);
            (0x13, 0x0): operation_calc(weight_0_19_0, weight_1_19_0, weight_2_19_0, weight_3_19_0, weight_4_19_0, weight_5_19_0, weight_6_19_0, weight_7_19_0, weight_8_19_0, weight_9_19_0, weight_10_19_0, weight_11_19_0, weight_12_19_0);
            (0x13, 0x1): operation_calc(weight_0_19_1, weight_1_19_1, weight_2_19_1, weight_3_19_1, weight_4_19_1, weight_5_19_1, weight_6_19_1, weight_7_19_1, weight_8_19_1, weight_9_19_1, weight_10_19_1, weight_11_19_1, weight_12_19_1);
            (0x13, 0x2): operation_calc(weight_0_19_2, weight_1_19_2, weight_2_19_2, weight_3_19_2, weight_4_19_2, weight_5_19_2, weight_6_19_2, weight_7_19_2, weight_8_19_2, weight_9_19_2, weight_10_19_2, weight_11_19_2, weight_12_19_2);
            (0x13, 0x3): operation_calc(weight_0_19_3, weight_1_19_3, weight_2_19_3, weight_3_19_3, weight_4_19_3, weight_5_19_3, weight_6_19_3, weight_7_19_3, weight_8_19_3, weight_9_19_3, weight_10_19_3, weight_11_19_3, weight_12_19_3);
            (0x14, 0x0): operation_calc(weight_0_20_0, weight_1_20_0, weight_2_20_0, weight_3_20_0, weight_4_20_0, weight_5_20_0, weight_6_20_0, weight_7_20_0, weight_8_20_0, weight_9_20_0, weight_10_20_0, weight_11_20_0, weight_12_20_0);
            (0x14, 0x1): operation_calc(weight_0_20_1, weight_1_20_1, weight_2_20_1, weight_3_20_1, weight_4_20_1, weight_5_20_1, weight_6_20_1, weight_7_20_1, weight_8_20_1, weight_9_20_1, weight_10_20_1, weight_11_20_1, weight_12_20_1);
            (0x14, 0x2): operation_calc(weight_0_20_2, weight_1_20_2, weight_2_20_2, weight_3_20_2, weight_4_20_2, weight_5_20_2, weight_6_20_2, weight_7_20_2, weight_8_20_2, weight_9_20_2, weight_10_20_2, weight_11_20_2, weight_12_20_2);
            (0x14, 0x3): operation_calc(weight_0_20_3, weight_1_20_3, weight_2_20_3, weight_3_20_3, weight_4_20_3, weight_5_20_3, weight_6_20_3, weight_7_20_3, weight_8_20_3, weight_9_20_3, weight_10_20_3, weight_11_20_3, weight_12_20_3);
            (0x15, 0x0): operation_calc(weight_0_21_0, weight_1_21_0, weight_2_21_0, weight_3_21_0, weight_4_21_0, weight_5_21_0, weight_6_21_0, weight_7_21_0, weight_8_21_0, weight_9_21_0, weight_10_21_0, weight_11_21_0, weight_12_21_0);
            (0x15, 0x1): operation_calc(weight_0_21_1, weight_1_21_1, weight_2_21_1, weight_3_21_1, weight_4_21_1, weight_5_21_1, weight_6_21_1, weight_7_21_1, weight_8_21_1, weight_9_21_1, weight_10_21_1, weight_11_21_1, weight_12_21_1);
            (0x15, 0x2): operation_calc(weight_0_21_2, weight_1_21_2, weight_2_21_2, weight_3_21_2, weight_4_21_2, weight_5_21_2, weight_6_21_2, weight_7_21_2, weight_8_21_2, weight_9_21_2, weight_10_21_2, weight_11_21_2, weight_12_21_2);
            (0x15, 0x3): operation_calc(weight_0_21_3, weight_1_21_3, weight_2_21_3, weight_3_21_3, weight_4_21_3, weight_5_21_3, weight_6_21_3, weight_7_21_3, weight_8_21_3, weight_9_21_3, weight_10_21_3, weight_11_21_3, weight_12_21_3);
            (0x16, 0x0): operation_calc(weight_0_22_0, weight_1_22_0, weight_2_22_0, weight_3_22_0, weight_4_22_0, weight_5_22_0, weight_6_22_0, weight_7_22_0, weight_8_22_0, weight_9_22_0, weight_10_22_0, weight_11_22_0, weight_12_22_0);
            (0x16, 0x1): operation_calc(weight_0_22_1, weight_1_22_1, weight_2_22_1, weight_3_22_1, weight_4_22_1, weight_5_22_1, weight_6_22_1, weight_7_22_1, weight_8_22_1, weight_9_22_1, weight_10_22_1, weight_11_22_1, weight_12_22_1);
            (0x16, 0x2): operation_calc(weight_0_22_2, weight_1_22_2, weight_2_22_2, weight_3_22_2, weight_4_22_2, weight_5_22_2, weight_6_22_2, weight_7_22_2, weight_8_22_2, weight_9_22_2, weight_10_22_2, weight_11_22_2, weight_12_22_2);
            (0x16, 0x3): operation_calc(weight_0_22_3, weight_1_22_3, weight_2_22_3, weight_3_22_3, weight_4_22_3, weight_5_22_3, weight_6_22_3, weight_7_22_3, weight_8_22_3, weight_9_22_3, weight_10_22_3, weight_11_22_3, weight_12_22_3);
            (0x17, 0x0): operation_calc(weight_0_23_0, weight_1_23_0, weight_2_23_0, weight_3_23_0, weight_4_23_0, weight_5_23_0, weight_6_23_0, weight_7_23_0, weight_8_23_0, weight_9_23_0, weight_10_23_0, weight_11_23_0, weight_12_23_0);
            (0x17, 0x1): operation_calc(weight_0_23_1, weight_1_23_1, weight_2_23_1, weight_3_23_1, weight_4_23_1, weight_5_23_1, weight_6_23_1, weight_7_23_1, weight_8_23_1, weight_9_23_1, weight_10_23_1, weight_11_23_1, weight_12_23_1);
            (0x17, 0x2): operation_calc(weight_0_23_2, weight_1_23_2, weight_2_23_2, weight_3_23_2, weight_4_23_2, weight_5_23_2, weight_6_23_2, weight_7_23_2, weight_8_23_2, weight_9_23_2, weight_10_23_2, weight_11_23_2, weight_12_23_2);
            (0x17, 0x3): operation_calc(weight_0_23_3, weight_1_23_3, weight_2_23_3, weight_3_23_3, weight_4_23_3, weight_5_23_3, weight_6_23_3, weight_7_23_3, weight_8_23_3, weight_9_23_3, weight_10_23_3, weight_11_23_3, weight_12_23_3);
            (0x18, 0x0): operation_calc(weight_0_24_0, weight_1_24_0, weight_2_24_0, weight_3_24_0, weight_4_24_0, weight_5_24_0, weight_6_24_0, weight_7_24_0, weight_8_24_0, weight_9_24_0, weight_10_24_0, weight_11_24_0, weight_12_24_0);
            (0x18, 0x1): operation_calc(weight_0_24_1, weight_1_24_1, weight_2_24_1, weight_3_24_1, weight_4_24_1, weight_5_24_1, weight_6_24_1, weight_7_24_1, weight_8_24_1, weight_9_24_1, weight_10_24_1, weight_11_24_1, weight_12_24_1);
            (0x18, 0x2): operation_calc(weight_0_24_2, weight_1_24_2, weight_2_24_2, weight_3_24_2, weight_4_24_2, weight_5_24_2, weight_6_24_2, weight_7_24_2, weight_8_24_2, weight_9_24_2, weight_10_24_2, weight_11_24_2, weight_12_24_2);
            (0x18, 0x3): operation_calc(weight_0_24_3, weight_1_24_3, weight_2_24_3, weight_3_24_3, weight_4_24_3, weight_5_24_3, weight_6_24_3, weight_7_24_3, weight_8_24_3, weight_9_24_3, weight_10_24_3, weight_11_24_3, weight_12_24_3);
            (0x19, 0x0): operation_calc(weight_0_25_0, weight_1_25_0, weight_2_25_0, weight_3_25_0, weight_4_25_0, weight_5_25_0, weight_6_25_0, weight_7_25_0, weight_8_25_0, weight_9_25_0, weight_10_25_0, weight_11_25_0, weight_12_25_0);
            (0x19, 0x1): operation_calc(weight_0_25_1, weight_1_25_1, weight_2_25_1, weight_3_25_1, weight_4_25_1, weight_5_25_1, weight_6_25_1, weight_7_25_1, weight_8_25_1, weight_9_25_1, weight_10_25_1, weight_11_25_1, weight_12_25_1);
            (0x19, 0x2): operation_calc(weight_0_25_2, weight_1_25_2, weight_2_25_2, weight_3_25_2, weight_4_25_2, weight_5_25_2, weight_6_25_2, weight_7_25_2, weight_8_25_2, weight_9_25_2, weight_10_25_2, weight_11_25_2, weight_12_25_2);
            (0x19, 0x3): operation_calc(weight_0_25_3, weight_1_25_3, weight_2_25_3, weight_3_25_3, weight_4_25_3, weight_5_25_3, weight_6_25_3, weight_7_25_3, weight_8_25_3, weight_9_25_3, weight_10_25_3, weight_11_25_3, weight_12_25_3);
            (0x1a, 0x0): operation_calc(weight_0_26_0, weight_1_26_0, weight_2_26_0, weight_3_26_0, weight_4_26_0, weight_5_26_0, weight_6_26_0, weight_7_26_0, weight_8_26_0, weight_9_26_0, weight_10_26_0, weight_11_26_0, weight_12_26_0);
            (0x1a, 0x1): operation_calc(weight_0_26_1, weight_1_26_1, weight_2_26_1, weight_3_26_1, weight_4_26_1, weight_5_26_1, weight_6_26_1, weight_7_26_1, weight_8_26_1, weight_9_26_1, weight_10_26_1, weight_11_26_1, weight_12_26_1);
            (0x1a, 0x2): operation_calc(weight_0_26_2, weight_1_26_2, weight_2_26_2, weight_3_26_2, weight_4_26_2, weight_5_26_2, weight_6_26_2, weight_7_26_2, weight_8_26_2, weight_9_26_2, weight_10_26_2, weight_11_26_2, weight_12_26_2);
            (0x1a, 0x3): operation_calc(weight_0_26_3, weight_1_26_3, weight_2_26_3, weight_3_26_3, weight_4_26_3, weight_5_26_3, weight_6_26_3, weight_7_26_3, weight_8_26_3, weight_9_26_3, weight_10_26_3, weight_11_26_3, weight_12_26_3);
            (0x1b, 0x0): operation_calc(weight_0_27_0, weight_1_27_0, weight_2_27_0, weight_3_27_0, weight_4_27_0, weight_5_27_0, weight_6_27_0, weight_7_27_0, weight_8_27_0, weight_9_27_0, weight_10_27_0, weight_11_27_0, weight_12_27_0);
            (0x1b, 0x1): operation_calc(weight_0_27_1, weight_1_27_1, weight_2_27_1, weight_3_27_1, weight_4_27_1, weight_5_27_1, weight_6_27_1, weight_7_27_1, weight_8_27_1, weight_9_27_1, weight_10_27_1, weight_11_27_1, weight_12_27_1);
            (0x1b, 0x2): operation_calc(weight_0_27_2, weight_1_27_2, weight_2_27_2, weight_3_27_2, weight_4_27_2, weight_5_27_2, weight_6_27_2, weight_7_27_2, weight_8_27_2, weight_9_27_2, weight_10_27_2, weight_11_27_2, weight_12_27_2);
            (0x1b, 0x3): operation_calc(weight_0_27_3, weight_1_27_3, weight_2_27_3, weight_3_27_3, weight_4_27_3, weight_5_27_3, weight_6_27_3, weight_7_27_3, weight_8_27_3, weight_9_27_3, weight_10_27_3, weight_11_27_3, weight_12_27_3);
            (0x1c, 0x0): operation_calc(weight_0_28_0, weight_1_28_0, weight_2_28_0, weight_3_28_0, weight_4_28_0, weight_5_28_0, weight_6_28_0, weight_7_28_0, weight_8_28_0, weight_9_28_0, weight_10_28_0, weight_11_28_0, weight_12_28_0);
            (0x1c, 0x1): operation_calc(weight_0_28_1, weight_1_28_1, weight_2_28_1, weight_3_28_1, weight_4_28_1, weight_5_28_1, weight_6_28_1, weight_7_28_1, weight_8_28_1, weight_9_28_1, weight_10_28_1, weight_11_28_1, weight_12_28_1);
            (0x1c, 0x2): operation_calc(weight_0_28_2, weight_1_28_2, weight_2_28_2, weight_3_28_2, weight_4_28_2, weight_5_28_2, weight_6_28_2, weight_7_28_2, weight_8_28_2, weight_9_28_2, weight_10_28_2, weight_11_28_2, weight_12_28_2);
            (0x1c, 0x3): operation_calc(weight_0_28_3, weight_1_28_3, weight_2_28_3, weight_3_28_3, weight_4_28_3, weight_5_28_3, weight_6_28_3, weight_7_28_3, weight_8_28_3, weight_9_28_3, weight_10_28_3, weight_11_28_3, weight_12_28_3);
            (0x1d, 0x0): operation_calc(weight_0_29_0, weight_1_29_0, weight_2_29_0, weight_3_29_0, weight_4_29_0, weight_5_29_0, weight_6_29_0, weight_7_29_0, weight_8_29_0, weight_9_29_0, weight_10_29_0, weight_11_29_0, weight_12_29_0);
            (0x1d, 0x1): operation_calc(weight_0_29_1, weight_1_29_1, weight_2_29_1, weight_3_29_1, weight_4_29_1, weight_5_29_1, weight_6_29_1, weight_7_29_1, weight_8_29_1, weight_9_29_1, weight_10_29_1, weight_11_29_1, weight_12_29_1);
            (0x1d, 0x2): operation_calc(weight_0_29_2, weight_1_29_2, weight_2_29_2, weight_3_29_2, weight_4_29_2, weight_5_29_2, weight_6_29_2, weight_7_29_2, weight_8_29_2, weight_9_29_2, weight_10_29_2, weight_11_29_2, weight_12_29_2);
            (0x1d, 0x3): operation_calc(weight_0_29_3, weight_1_29_3, weight_2_29_3, weight_3_29_3, weight_4_29_3, weight_5_29_3, weight_6_29_3, weight_7_29_3, weight_8_29_3, weight_9_29_3, weight_10_29_3, weight_11_29_3, weight_12_29_3);
            (0x1e, 0x0): operation_calc(weight_0_30_0, weight_1_30_0, weight_2_30_0, weight_3_30_0, weight_4_30_0, weight_5_30_0, weight_6_30_0, weight_7_30_0, weight_8_30_0, weight_9_30_0, weight_10_30_0, weight_11_30_0, weight_12_30_0);
            (0x1e, 0x1): operation_calc(weight_0_30_1, weight_1_30_1, weight_2_30_1, weight_3_30_1, weight_4_30_1, weight_5_30_1, weight_6_30_1, weight_7_30_1, weight_8_30_1, weight_9_30_1, weight_10_30_1, weight_11_30_1, weight_12_30_1);
            (0x1e, 0x2): operation_calc(weight_0_30_2, weight_1_30_2, weight_2_30_2, weight_3_30_2, weight_4_30_2, weight_5_30_2, weight_6_30_2, weight_7_30_2, weight_8_30_2, weight_9_30_2, weight_10_30_2, weight_11_30_2, weight_12_30_2);
            (0x1e, 0x3): operation_calcAndNext(weight_0_30_3, weight_1_30_3, weight_2_30_3, weight_3_30_3, weight_4_30_3, weight_5_30_3, weight_6_30_3, weight_7_30_3, weight_8_30_3, weight_9_30_3, weight_10_30_3, weight_11_30_3, weight_12_30_3);
        }
    }
    apply {
        if (hdr.p4calc.isValid()) {
            standard_metadata.mcast_grp =  1;
            calculate.apply();
        } else {
            operation_drop();
        }
    }
}

/*************************************************************************
 ****************  E G R E S S   P R O C E S S I N G   *******************
 *************************************************************************/
control MyEgress(inout headers hdr,
                 inout metadata meta,
                 inout standard_metadata_t standard_metadata) {
    apply { }
}

/*************************************************************************
 *************   C H E C K S U M    C O M P U T A T I O N   **************
 *************************************************************************/

control MyComputeChecksum(inout headers hdr, inout metadata meta) {
    apply { }
}

/*************************************************************************
 ***********************  D E P A R S E R  *******************************
 *************************************************************************/
control MyDeparser(packet_out packet, in headers hdr) {
    apply {
        packet.emit(hdr.ethernet);
        packet.emit(hdr.p4calc);
    }
}

/*************************************************************************
 ***********************  S W I T T C H **********************************
 *************************************************************************/

V1Switch(
MyParser(),
MyVerifyChecksum(),
MyIngress(),
MyEgress(),
MyComputeChecksum(),
MyDeparser()
) main;
